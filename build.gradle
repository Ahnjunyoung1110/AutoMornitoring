plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'AutoMonitoring'
version = '0.0.1-SNAPSHOT'
description = 'AutoMonitoring by ffmpeg'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	developmentOnly "org.springframework.boot:spring-boot-devtools"

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.testcontainers:junit-jupiter:1.20.3'
	testImplementation 'org.testcontainers:rabbitmq:1.20.3'
	testImplementation 'org.springframework.amqp:spring-rabbit-test:3.2.6'

	testImplementation platform('org.junit:junit-bom:5.10.2')
	testImplementation 'org.junit.jupiter:junit-jupiter'     // @Test(jupiter)
	testRuntimeOnly  'org.junit.platform:junit-platform-launcher'
	testRuntimeOnly 'com.h2database:h2'

	testImplementation 'org.assertj:assertj-core:3.26.0'     // assertThat
	testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
